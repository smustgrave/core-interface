<?php

/**
 * @file
 * Functions to support theming.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\ui_suite_uswds\HookHandler\FormAlter;
use Drupal\ui_suite_uswds\HookHandler\PreprocessBlock;
use Drupal\ui_suite_uswds\HookHandler\PreprocessDetails;
use Drupal\ui_suite_uswds\HookHandler\PreprocessForms;
use Drupal\ui_suite_uswds\HookHandler\PreprocessMenu;
use Drupal\ui_suite_uswds\HookHandler\PreprocessPage;
use Drupal\ui_suite_uswds\HookHandler\PreprocessPager;
use Drupal\ui_suite_uswds\HookHandler\PreprocessRegion;
use Drupal\ui_suite_uswds\HookHandler\PreprocessViewsMiniPager;
use Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter;
use Drupal\ui_suite_uswds\SettingsManager;
use Drupal\ui_suite_uswds\SubthemeManager;

/**
 * Implements hook_theme().
 */
function ui_suite_uswds_theme($existing, $type, $theme, $path): array {
  return [
    'government_banner' => [
      'path' => $path . '/templates/misc',
      'variables' => [
        'image_base' => [],
      ],
    ],
    'details_layout_builder' => [
      'base hook' => 'details',
      'path' => $path . '/templates/layout_builder',
    ],
  ];
}

/**
 * Implements hook_preprocess().
 */
function ui_suite_uswds_preprocess(&$variables): void {
  // Set the path to the base theme.
  $variables['active_theme_path'] = base_path() . \Drupal::theme()->getActiveTheme()->getPath();

  // Set the path to the base theme.
  if (theme_get_setting('cdn_provider') == 'custom' || theme_get_setting('cdn_provider') == 'jsdelivr') {
    $variables['uswds_images'] = theme_get_setting('cdn_custom_img') . '/';
  }
  else {
    $variables['uswds_images'] = $variables['active_theme_path'] . '/assets/uswds/images/';
  }
}

/**
 * Implements hook_preprocess_page().
 */
function ui_suite_uswds_preprocess_page(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessPage $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessPage::class);
  $instance->preprocess($variables);
}

/**
 * Implements template_preprocess_region().
 */
function ui_suite_uswds_preprocess_region(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessRegion $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessRegion::class);
  $instance->preprocess($variables);
}

/**
 * Implements hook_form_alter().
 */
function ui_suite_uswds_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\FormAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(FormAlter::class);
  $instance->alter($form, $form_state, $form_id);
}

/**
 * Implements hook_form_alter().
 */
function ui_suite_uswds_preprocess_form_element(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessForms $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessForms::class);
  $instance->preprocessFormElement($variables);
}

/**
 * Implements hook_preprocess_form_element_label().
 */
function ui_suite_uswds_preprocess_form_element_label(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessForms $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessForms::class);
  $instance->preprocessFormElementLabels($variables);
}

/**
 * Implements hook_preprocess_image_widget().
 */
function ui_suite_uswds_preprocess_image_widget(array &$variables): void {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_library_info_alter().
 */
function ui_suite_uswds_library_info_alter(&$libraries, $extension): void {
  if ($extension == 'ui_suite_uswds' && isset($libraries['framework']) && theme_get_setting('cdn_provider') !== 'none') {
    // CSS.
    if (!empty(theme_get_setting('cdn_custom_css'))) {
      $cdn_css = theme_get_setting('cdn_custom_css');
      $libraries['framework']['css']['theme'][$cdn_css] = ['type:' => 'external'];
    }
    // JS.
    if (!empty(theme_get_setting('cdn_custom_js'))) {
      $cdn_js = theme_get_setting('cdn_custom_js');
      $libraries['framework']['js'][$cdn_js] = ['type:' => 'external'];
    }
  }
}

/**
 * Implements hook_preprocess_details().
 */
function ui_suite_uswds_preprocess_details(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessDetails $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessDetails::class);
  $instance->preprocess($variables);
}

/**
 * Implements hook_preprocess_views_mini_pager().
 */
function ui_suite_uswds_preprocess_views_mini_pager(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessViewsMiniPager $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessViewsMiniPager::class);
  $instance->preprocess($variables);
}

/**
 * Implements hook_preprocess_menu().
 */
function ui_suite_uswds_preprocess_menu(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessMenu $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessMenu::class);
  $instance->preprocessMenu($variables);
}

/**
 * Implements hook_preprocess_menu__REGION().
 *
 * @see ui_suite_uswds_theme_suggestions_block_alter()
 */
function ui_suite_uswds_preprocess_menu__primary_menu(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessMenu $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessMenu::class);
  $instance->preprocessPrimaryMenu($variables);
}

/**
 * Implements hook_preprocess_menu__REGION().
 *
 * @see ui_suite_uswds_theme_suggestions_block_alter()
 */
function ui_suite_uswds_preprocess_menu__secondary_menu(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessMenu $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessMenu::class);
  $instance->preprocessSecondaryMenu($variables);
}

/**
 * Implements hook_preprocess_menu_local_tasks().
 */
function ui_suite_uswds_preprocess_menu_local_tasks(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessMenu $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessMenu::class);
  $instance->preprocessMenuLocalTasks($variables);
}

/**
 * Implements hook_preprocess_menu_local_action().
 */
function ui_suite_uswds_preprocess_menu_local_action(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessMenu $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessMenu::class);
  $instance->preprocessMenuLocalAction($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 */
function ui_suite_uswds_preprocess_block__block_content__hero(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessContentHero($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 */
function ui_suite_uswds_preprocess_block__system_menu_block__footer_primary(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessSystemMenuBlockFooterPrimary($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 */
function ui_suite_uswds_preprocess_block__system_menu_block__primary_menu(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessSystemMenuBlockPrimaryMenu($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 */
function ui_suite_uswds_preprocess_block__system_menu_block__secondary_menu(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessSystemMenuBlockSecondaryMenu($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 */
function ui_suite_uswds_preprocess_block__system_menu_block__sidebar_first(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessSystemMenuBlockSidebarFirst($variables);
}

/**
 * Implements hook_preprocess_block__DELTA__REGION().
 *
 * This made possible by our custom theme suggestion.
 *
 * @see ui_suite_uswds_theme_suggestions_block_alter()
 */
function ui_suite_uswds_preprocess_block__system_menu_block__sidebar_second(&$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessBlock $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessBlock::class);
  $instance->preprocessSystemMenuBlockSidebarSecond($variables);
}

/**
 * Implements hook_preprocess_HOOK() for 'pager'.
 */
function ui_suite_uswds_preprocess_pager(array &$variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\PreprocessPager $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(PreprocessPager::class);
  $instance->preprocess($variables);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ui_suite_uswds_form_system_theme_settings_alter(&$form, FormStateInterface $form_state, $form_id = NULL): void {
  /** @var \Drupal\ui_suite_uswds\SettingsManager $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(SettingsManager::class);
  $instance->themeSettingsAlter($form, $form_state, $form_id);
}

/**
 * Validate callback to ensure filter order and allowed_html are compatible.
 */
function ui_suite_uswds_form_system_theme_settings_subtheme_validate(array &$form, FormStateInterface $form_state): void {
  /** @var \Drupal\ui_suite_uswds\SubthemeManager $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(SubthemeManager::class);
  $instance->validateForm($form, $form_state);
}

/**
 * Form submission handler for node_form().
 *
 * @see ui_suite_uswds_form_system_theme_settings_alter()
 */
function ui_suite_uswds_form_system_theme_settings_subtheme_submit($form, FormStateInterface $form_state): void {
  /** @var \Drupal\ui_suite_uswds\SubthemeManager $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(SubthemeManager::class);
  $instance->submitForm($form, $form_state);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for 'input'.
 */
function ui_suite_uswds_theme_suggestions_input_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->input($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function ui_suite_uswds_theme_suggestions_form_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->form($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for 'form element'.
 */
function ui_suite_uswds_theme_suggestions_form_element_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->formElement($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for 'form element label'.
 */
function ui_suite_uswds_theme_suggestions_form_element_label_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->formElementLabel($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ui_suite_uswds_theme_suggestions_menu_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->menu($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ui_suite_uswds_theme_suggestions_block_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->block($suggestions, $variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ui_suite_uswds_theme_suggestions_details_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\ui_suite_uswds\HookHandler\ThemeSuggestionsAlter $instance */
  $instance = \Drupal::service('class_resolver')->getInstanceFromDefinition(ThemeSuggestionsAlter::class);
  $instance->details($suggestions, $variables);
}
