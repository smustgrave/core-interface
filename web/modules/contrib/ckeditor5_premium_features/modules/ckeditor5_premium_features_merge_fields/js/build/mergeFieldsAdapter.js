/*!
 * Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see https://ckeditor.com/legal/ckeditor-oss-license
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.mergeFieldsAdapter=t())}(self,(()=>(()=>{"use strict";var e={d:(t,i)=>{for(var o in i)e.o(i,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:i[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>i});const i={MergeFieldsAdapter:class{static get pluginName(){return"MergeFieldsAdapter"}constructor(e){this.editor=e;const t=this.editor.plugins.get("MergeFields"),i=e.config.get("mergeFields")||{};i.fields&&t.setFields(i.fields)}init(){const e=this.editor.config.get("mergeFields")||{};let t=this.editor.config.get("initialData")||"";e.definitions&&Array.isArray(e.definitions)&&e.definitions.forEach((i=>{i.definitions&&Array.isArray(i.definitions)&&i.definitions.forEach((i=>{const o=e.prefix+i.id+e.suffix;t=t.replaceAll(i.token,o)}))})),this.editor.config.set("initialData",t)}}};return t=t.default})()));